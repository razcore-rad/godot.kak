:kak-lsp-configure-godot: https://github.com/kak-lsp/kak-lsp/wiki/How-to-install-servers#gdscript-godot
:kak-lsp-website: https://github.com/kak-lsp/kak-lsp/
:godot-website: https://godotengine.org
:kakoune-website: https://kakoune.org
:gettext-website: https://www.gnu.org/software/gettext/

= godot.kak

Prototype and develop link:{godot-website}[Godot] projects from link:{kakoune-website}[Kakoune].

With this plugin we can run Godot scene files (`*.tscn`) directly from link:{kakoune-website}[Kakoune].

== Usage

This plugin adds the `:godot` command which calls Godot with the selected scene file from the completion list.

== Configuration

The `:godot` command expects to find the `godot` executable in your `$PATH` environment variable by default. You can change this behavior with the `godot_executable` option, for example:

-------------------------------------------------------------
set-option global godot_executable "path_to_godot_executable"
-------------------------------------------------------------

For further tweaks we have the `godot_arguments` `str-list` option which is populated with the `--debug` argument by default.

The command we invoke is `godot --debug PATH_TO_SCENE_FILE.tscn`.

On launching the selected scene file, Godot's output will become accessible in a FIFO buffer called `\*godot*`. Deleting this buffer will result in closing the opened Godot scene file as well.

You can invoke the `:godot` command with a user defined keyboard shortcut for fast access:

-------------------------------------------------------------
map -docstring "run Godot scene file" global user g ":godot "
-------------------------------------------------------------

== Dependencies

- The link:{godot-website}[Godot] game engine.
- The link:{gettext-website}[gettext] package.

== Notes

For a productive experience install the link:{kak-lsp-website}[Kakoune Language Server Protocol Client] and link:{kak-lsp-configure-godot}[configure it to communicate with Godot].
